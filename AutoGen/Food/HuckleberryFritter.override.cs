// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;

    [Serialized]
    [LocDisplayName("Huckleberry Fritter")]
    [Weight(200)]
    [Ecopedia("Food", "Cooking", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class HuckleberryFritterItem : FoodItem
    {
        public override LocString DisplayDescription    => Localizer.DoStr("Fried and sweet.");
        
        public override float Calories                  => 1200;
        public override Nutrients Nutrition             => new Nutrients() { Carbs = 16, Fat = 20, Protein = 0, Vitamins = 8};
    }


    [RequiresSkill(typeof(BakingSkill), 2)]
    public partial class HuckleberryFritterRecipe : RecipeFamily
    {
        public HuckleberryFritterRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                "HuckleberryFritter",  //noloc
                Localizer.DoStr("Huckleberry Fritter"),
                new List<IngredientElement>
                {
                    new IngredientElement(typeof(SugarItem), 10, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),
                    new IngredientElement(typeof(PastryDoughItem), 4, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),
                    new IngredientElement(typeof(HuckleberryExtractItem), 6, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),
                    new IngredientElement(typeof(OilItem), 4, typeof(BakingSkill), typeof(BakingLavishResourcesTalent)),
                },
                new List<CraftingElement>
                {
                    new CraftingElement<HuckleberryFritterItem>(1)
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 1;
            this.LaborInCalories = CreateLaborInCaloriesValue(20, typeof(BakingSkill));
            this.CraftMinutes = CreateCraftTimeValue(typeof(HuckleberryFritterRecipe), 1, typeof(BakingSkill), typeof(BakingFocusedSpeedTalent), typeof(BakingParallelSpeedTalent));
            this.ModsPreInitialize();
            this.Initialize(Localizer.DoStr("Huckleberry Fritter"), typeof(HuckleberryFritterRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(typeof(BakeryOvenObject), this);
        }

        /// <summary>Hook for mods to customize RecipeFamily before initialization. You can change recipes, xp, labor, time here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize RecipeFamily after initialization, but before registration. You can change skill requirements here.</summary>
        partial void ModsPostInitialize();
    }
}