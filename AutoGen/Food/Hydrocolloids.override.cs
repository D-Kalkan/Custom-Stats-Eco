// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Controller;

    //New Fuel for steam trucks Creosote 
    [RequiresSkill(typeof(MechanicsSkill), 1)]
    public partial class HydrocolloidsRecipe : RecipeFamily
    {
        public HydrocolloidsRecipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                "Creosote",  //noloc
                Localizer.DoStr("Creosote"),
                new List<IngredientElement>
                {
                    new IngredientElement(typeof(CharcoalItem), 1, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)), //noloc
                    new IngredientElement(typeof(OilItem), 1, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)), //noloc
                },
                new List<CraftingElement>
                {
                    new CraftingElement<HydrocolloidsItem>(1)
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 1;
            this.LaborInCalories = CreateLaborInCaloriesValue(25, typeof(MechanicsSkill));
            this.CraftMinutes = CreateCraftTimeValue(typeof(HydrocolloidsRecipe), 0.5f, typeof(MechanicsSkill), typeof(MechanicsFocusedSpeedTalent), typeof(MechanicsParallelSpeedTalent));
            this.ModsPreInitialize();
            this.Initialize(Localizer.DoStr("Creosote"), typeof(HydrocolloidsRecipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(typeof(CementKilnObject), this);
        }

        /// <summary>Hook for mods to customize RecipeFamily before initialization. You can change recipes, xp, labor, time here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize RecipeFamily after initialization, but before registration. You can change skill requirements here.</summary>
        partial void ModsPostInitialize();
    }

    /// <summary>Auto-generated class. Don't modify it! All your changes will be wiped with next update! Use Mods* partial methods instead for customization.</summary>
    [Serialized]
    [LocDisplayName("Creosote")]
    [Weight(1000)]
    [Fuel(20000)][Tag("Fuel")]
    [Ecopedia("Items", "Products", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    [Tag("Creosote", 1)]
    public partial class HydrocolloidsItem : Item
    {
        public override LocString DisplayDescription { get { return Localizer.DoStr("A black residue, consisting of carbon and any remaining ash."); } }
    }
}