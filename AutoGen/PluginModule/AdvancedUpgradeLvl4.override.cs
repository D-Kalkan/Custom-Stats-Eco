// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Modules;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;
    using Eco.Core.Controller;

    [RequiresSkill(typeof(MechanicsSkill), 6)]
    public partial class AdvancedUpgradeLvl4Recipe : RecipeFamily
    {
        public AdvancedUpgradeLvl4Recipe()
        {
            var recipe = new Recipe();
            recipe.Init(
                "AdvancedUpgradeLvl4",  //noloc
                Localizer.DoStr("Advanced Upgrade 4"),
                new List<IngredientElement>
                {
                    new IngredientElement(typeof(IronPlateItem), 6, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),
                    new IngredientElement(typeof(PistonItem), 8, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),
                    new IngredientElement("Lumber", 12, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)), //noloc
                    new IngredientElement(typeof(AdvancedUpgradeLvl3Item), 1, true),
                },
                new List<CraftingElement>
                {
                    new CraftingElement<AdvancedUpgradeLvl4Item>()
                });
            this.Recipes = new List<Recipe> { recipe };
            this.ExperienceOnCraft = 4;
            this.LaborInCalories = CreateLaborInCaloriesValue(90, typeof(MechanicsSkill));
            this.CraftMinutes = CreateCraftTimeValue(typeof(AdvancedUpgradeLvl4Recipe), 12, typeof(MechanicsSkill), typeof(MechanicsFocusedSpeedTalent), typeof(MechanicsParallelSpeedTalent));
            this.ModsPreInitialize();
            this.Initialize(Localizer.DoStr("Advanced Upgrade 4"), typeof(AdvancedUpgradeLvl4Recipe));
            this.ModsPostInitialize();
            CraftingComponent.AddRecipe(typeof(MachinistTableObject), this);
        }

        /// <summary>Hook for mods to customize RecipeFamily before initialization. You can change recipes, xp, labor, time here.</summary>
        partial void ModsPreInitialize();
        /// <summary>Hook for mods to customize RecipeFamily after initialization, but before registration. You can change skill requirements here.</summary>
        partial void ModsPostInitialize();
    }

    [Serialized]
    [LocDisplayName("Advanced Upgrade 4")]
    [Weight(1)]
    [Ecopedia("Upgrade Modules", "Advanced Upgrades", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]                                                                      //_If_EcopediaPage_
    [Tag("Upgrade", 1)]
    [Tag("AdvancedUpgrade", 1)]
    public partial class AdvancedUpgradeLvl4Item :
        EfficiencyModule
    {
        public override LocString DisplayNamePlural { get { return Localizer.DoStr("Advanced Upgrade 4"); } }
        public override LocString DisplayDescription { get { return Localizer.DoStr("Advanced Upgrade that increases crafting efficiency."); } }

        public AdvancedUpgradeLvl4Item() : base(
            ModuleTypes.ResourceEfficiency | ModuleTypes.SpeedEfficiency,
            0.75f         
        ) { }
    }
}
